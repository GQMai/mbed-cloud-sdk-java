package com.arm.mbed.cloud.sdk.common.dao;

import com.arm.mbed.cloud.sdk.annotations.NonNull;
import com.arm.mbed.cloud.sdk.annotations.Nullable;
import com.arm.mbed.cloud.sdk.annotations.Preamble;
import com.arm.mbed.cloud.sdk.common.MbedCloudException;
import com.arm.mbed.cloud.sdk.common.SdkModel;

/**
 *
 * Data Access Object definition for dealing with data objects (Models) defined in the Cloud.
 *
 * @param <T>
 *            model type
 */
@Preamble(description = "Model DAO definition")
public interface ModelDao<T extends SdkModel> extends CloudDao {
    /**
     * Method name.
     */
    String METHOD_SET_MODEL = "setModel";
    /**
     * Method name.
     */
    String METHOD_GET_MODEL = "getModel";

    /**
     * Sets the underlying Model Object (POJO) containing the data.
     *
     * @param model
     *            instance of the model. if null, an instance generated by the empty constructor is used.
     */
    void setModel(@Nullable T model);

    /**
     * States whether the underlying Model Object (POJO) has been set or not.
     * 
     * @return true if there is an underlying model. False otherwise.
     */
    boolean hasModel();

    /**
     * Sets the value of the identifier of the underlying Model Object.
     *
     * @param id
     *            identifier of the model as defined by {@link SdkModel#getId()}.
     */
    void setId(@Nullable String id);

    /**
     * Gets the value of the identifier of the underlying Model Object.
     *
     * @return the identifier value.
     */
    @Nullable
    String getId();

    /**
     * Gets the underlying Model Object (POJO) containing the data.
     *
     * @return the data model.
     */
    @Nullable
    T getModel();

    /**
     * Gets the underlying Model Object (POJO) containing the data or a new instance if it was not initially set.
     *
     * @return the data model or a new instance.
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    @NonNull
    T getModelOrNew();

}
