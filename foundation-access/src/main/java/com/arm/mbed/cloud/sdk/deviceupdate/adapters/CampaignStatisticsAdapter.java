// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.adapters;

import com.arm.mbed.cloud.sdk.annotations.Internal;
import com.arm.mbed.cloud.sdk.annotations.Preamble;
import com.arm.mbed.cloud.sdk.common.GenericAdapter;
import com.arm.mbed.cloud.sdk.common.TranslationUtils;
import com.arm.mbed.cloud.sdk.common.listing.ListResponse;
import com.arm.mbed.cloud.sdk.deviceupdate.model.CampaignStatistics;
import com.arm.mbed.cloud.sdk.deviceupdate.model.CampaignStatisticsId;
import com.arm.mbed.cloud.sdk.deviceupdate.model.CampaignStatisticsSummaryStatus;
import com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.model.EventTypeSummary;
import com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.model.EventTypeSummaryList;
import java.util.List;

/**
 * Adapter for campaign statistics.
 */
@Preamble(description = "Adapter for campaign statistics.")
@Internal
@SuppressWarnings("checkstyle:LineLength")
public final class CampaignStatisticsAdapter {
    /**
     * Constructor.
     */
    private CampaignStatisticsAdapter() {
        super();
        // Nothing to do;
    }

    /**
     * Maps an event type summary list into a campaign statistics.
     * 
     * @param toBeMapped
     *            an event type summary list.
     * @return mapped list response
     */
    @Internal
    public static ListResponse<CampaignStatistics> mapList(EventTypeSummaryList toBeMapped) {
        final EventTypeSummaryList finalList = toBeMapped;
        final GenericAdapter.RespList<EventTypeSummary> respList = new GenericAdapter.RespList<EventTypeSummary>() {
            /**
             * Executes getAfter.
             * 
             * @return something
             */
            @Override
            public String getAfter() {
                return (finalList == null) ? null : finalList.getAfter();
            }

            /**
             * Executes getContinuationMarker.
             * 
             * @return something
             */
            @Override
            public String getContinuationMarker() {
                return null;
            }

            /**
             * Executes getData.
             * 
             * @return something
             */
            @Override
            public List<EventTypeSummary> getData() {
                return (finalList == null) ? null : finalList.getData();
            }

            /**
             * Executes getHasMore.
             * 
             * @return something
             */
            @Override
            public Boolean getHasMore() {
                return (finalList == null) ? null : finalList.isHasMore();
            }

            /**
             * Executes getLimit.
             * 
             * @return something
             */
            @Override
            public Integer getLimit() {
                return (finalList == null) ? null : finalList.getLimit();
            }

            /**
             * Executes getOrder.
             * 
             * @return something
             */
            @Override
            public String getOrder() {
                return (finalList == null) ? null : finalList.getOrder().toString();
            }

            /**
             * Executes getTotalCount.
             * 
             * @return something
             */
            @Override
            public Integer getTotalCount() {
                return (finalList == null) ? null : finalList.getTotalCount();
            }
        };
        return GenericAdapter.mapList(respList, CampaignStatisticsAdapter.getMapper());
    }

    /**
     * Gets a mapper.
     * 
     * @return a mapper
     */
    @Internal
    public static GenericAdapter.Mapper<EventTypeSummaryList, ListResponse<CampaignStatistics>> getListMapper() {
        return new GenericAdapter.Mapper<EventTypeSummaryList, ListResponse<CampaignStatistics>>() {
            /**
             * Maps.
             * 
             * @param toBeMapped
             *            model to be mapped.
             * @return a mapped object
             */
            @Override
            public ListResponse<CampaignStatistics> map(EventTypeSummaryList toBeMapped) {
                return CampaignStatisticsAdapter.mapList(toBeMapped);
            }
        };
    }

    /**
     * Maps an event type summary into a campaign statistics.
     * 
     * @param toBeMapped
     *            an event type summary.
     * @return mapped a campaign statistics
     */
    @Internal
    public static CampaignStatistics map(EventTypeSummary toBeMapped) {
        if (toBeMapped == null) {
            return null;
        }
        final CampaignStatistics campaignStatistics = new CampaignStatistics(TranslationUtils.toInt(toBeMapped.getCount()),
                                                                             TranslationUtils.toDate(toBeMapped.getCreatedAt()),
                                                                             translateToCampaignStatisticsSummaryStatus(toBeMapped.getSummaryStatus()));
        campaignStatistics.setCampaignId(toBeMapped.getCampaignId());
        campaignStatistics.setId(translateToCampaignStatisticsId(toBeMapped.getId()));
        return campaignStatistics;
    }

    /**
     * Gets a mapper.
     * 
     * @return a mapper
     */
    @Internal
    public static GenericAdapter.Mapper<EventTypeSummary, CampaignStatistics> getMapper() {
        return new GenericAdapter.Mapper<EventTypeSummary, CampaignStatistics>() {
            /**
             * Maps.
             * 
             * @param toBeMapped
             *            model to be mapped.
             * @return a mapped object
             */
            @Override
            public CampaignStatistics map(EventTypeSummary toBeMapped) {
                return CampaignStatisticsAdapter.map(toBeMapped);
            }
        };
    }

    /**
     * Maps the enum value.
     * 
     * @param toBeMapped
     *            an id enum.
     * @return mapped enum value
     */
    @Internal
    protected static CampaignStatisticsId translateToCampaignStatisticsId(EventTypeSummary.IdEnum toBeMapped) {
        if (toBeMapped == null) {
            return CampaignStatisticsId.getUnknownEnum();
        }
        switch (toBeMapped) {
            case FAIL:
                return CampaignStatisticsId.FAIL;
            case SUCCESS:
                return CampaignStatisticsId.SUCCESS;
            case INFO:
                return CampaignStatisticsId.INFO;
            case SKIPPED:
                return CampaignStatisticsId.SKIPPED;
            default:
                return CampaignStatisticsId.getUnknownEnum();
        }
    }

    /**
     * Maps the enum value.
     * 
     * @param toBeMapped
     *            a summary status enum.
     * @return mapped enum value
     */
    @Internal
    protected static CampaignStatisticsSummaryStatus
              translateToCampaignStatisticsSummaryStatus(EventTypeSummary.SummaryStatusEnum toBeMapped) {
        if (toBeMapped == null) {
            return CampaignStatisticsSummaryStatus.getUnknownEnum();
        }
        switch (toBeMapped) {
            case FAIL:
                return CampaignStatisticsSummaryStatus.FAIL;
            case SUCCESS:
                return CampaignStatisticsSummaryStatus.SUCCESS;
            case INFO:
                return CampaignStatisticsSummaryStatus.INFO;
            case SKIPPED:
                return CampaignStatisticsSummaryStatus.SKIPPED;
            default:
                return CampaignStatisticsSummaryStatus.getUnknownEnum();
        }
    }
}
