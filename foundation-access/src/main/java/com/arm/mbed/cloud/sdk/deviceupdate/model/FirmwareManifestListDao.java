// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import com.arm.mbed.cloud.sdk.DeviceUpdate;
import com.arm.mbed.cloud.sdk.annotations.Internal;
import com.arm.mbed.cloud.sdk.annotations.Preamble;
import com.arm.mbed.cloud.sdk.common.ApiClientWrapper;
import com.arm.mbed.cloud.sdk.common.ConnectionOptions;
import com.arm.mbed.cloud.sdk.common.MbedCloudException;
import com.arm.mbed.cloud.sdk.common.SdkContext;
import com.arm.mbed.cloud.sdk.common.dao.AbstractModelListDao;
import com.arm.mbed.cloud.sdk.common.dao.ModelListDao;
import com.arm.mbed.cloud.sdk.common.listing.ListResponse;

/**
 * Data Access Object (DAO) for listing firmware manifests.
 * <p>
 * 
 * @see <a href="http://www.corej2eepatterns.com/Patterns/DataAccessObject.htm">Core J2EE Patterns - Data Access
 *      Object</a>
 */
@Preamble(description = "Data Access Object (DAO) for listing firmware manifests.")
public class FirmwareManifestListDao extends AbstractModelListDao<FirmwareManifest, FirmwareManifestListOptions>
                                     implements ModelListDao<FirmwareManifest, FirmwareManifestListOptions> {
    /**
     * Constructor.
     * 
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    public FirmwareManifestListDao() throws MbedCloudException {
        super();
    }

    /**
     * Constructor.
     * 
     * @param client
     *            an api client wrapper.
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    public FirmwareManifestListDao(ApiClientWrapper client) throws MbedCloudException {
        super(client);
    }

    /**
     * Constructor.
     * 
     * @param options
     *            a connection options.
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    public FirmwareManifestListDao(ConnectionOptions options) throws MbedCloudException {
        super(options);
    }

    /**
     * Constructor.
     * 
     * @param sdkContext
     *            an sdk context.
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    public FirmwareManifestListDao(SdkContext sdkContext) throws MbedCloudException {
        super(sdkContext);
    }

    /**
     * Clones this instance.
     *
     * <p>
     * 
     * @see java.lang.Object#clone()
     * @return a cloned instance
     */
    @Override
    @SuppressWarnings({ "resource", "unused" })
    public FirmwareManifestListDao clone() {
        try {
            return new FirmwareManifestListDao().configureAndGet(getModuleOrThrow() == null ? null
                                                                                            : getModuleOrThrow().clone());
        } catch (MbedCloudException exception) {
            return null;
        }
    }

    /**
     * a firmware manifest dao class.
     * 
     * @return a firmware manifest dao class
     */
    @Override
    @Internal
    @SuppressWarnings("unchecked")
    public Class<FirmwareManifestDao> getModelDaoClass() {
        return FirmwareManifestDao.class;
    }

    /**
     * a firmware manifest dao.
     * 
     * @return a firmware manifest dao
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    @Override
    @Internal
    @SuppressWarnings({ "unchecked", "resource" })
    public FirmwareManifestDao getNewModelDao() throws MbedCloudException {
        return new FirmwareManifestDao().configureAndGet(getModuleOrThrow());
    }

    /**
     * a firmware manifest list options.
     * 
     * @return a firmware manifest list options
     */
    @Override
    @Internal
    protected FirmwareManifestListOptions instantiateListOptions() {
        return new FirmwareManifestListOptions();
    }

    /**
     * Instantiates modules.
     * 
     * @param client
     *            an api client wrapper.
     * @return instantiated module
     */
    @Override
    @Internal
    protected SdkContext instantiateModule(ApiClientWrapper client) {
        return new DeviceUpdate(client);
    }

    /**
     * Instantiates modules.
     * 
     * @param options
     *            a connection options.
     * @return instantiated module
     */
    @Override
    @Internal
    protected SdkContext instantiateModule(ConnectionOptions options) {
        return new DeviceUpdate(options);
    }

    /**
     * Instantiates modules.
     * 
     * @param context
     *            an sdk context.
     * @return instantiated module
     */
    @Override
    @Internal
    protected SdkContext instantiateModule(SdkContext context) {
        return new DeviceUpdate(context);
    }

    /**
     * Lists firmware manifests matching filter options.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.DeviceUpdate#listFirmwareManifests(com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareManifestListOptions)}
     * 
     * @param options
     *            list options.
     * @return one page of firmware manifests
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    @Override
    protected ListResponse<FirmwareManifest>
              requestOnePage(FirmwareManifestListOptions options) throws MbedCloudException {
        return ((DeviceUpdate) getModuleOrThrow()).listFirmwareManifests(options);
    }
}
