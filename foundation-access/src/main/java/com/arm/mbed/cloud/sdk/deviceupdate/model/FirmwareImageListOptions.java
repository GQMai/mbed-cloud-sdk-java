// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import com.arm.mbed.cloud.sdk.annotations.Internal;
import com.arm.mbed.cloud.sdk.annotations.Preamble;
import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.IncludeField;
import com.arm.mbed.cloud.sdk.common.listing.ListOptions;
import com.arm.mbed.cloud.sdk.common.listing.filtering.Filter;
import com.arm.mbed.cloud.sdk.common.listing.filtering.Filters;
import java.util.Date;
import java.util.List;

/**
 * Options to use when listing firmware images.
 * <p>
 * Note:
 * <p>
 * <ul>
 * <li>Filters:
 * <p>
 * The list can be filtered server-side on some of the fields of a firmware image.
 * <p>
 * The following filters are currently supported:
 *
 * <p>
 * <table style="border: 2px solid navy; width:100%; border-collapse:collapse;border-spacing:0" summary="Available
 * filters">
 * <caption>Server-side filters</caption>
 * <tr>
 * <th style="background-color:#cbcefb;border-color:inherit;text-align:center" rowspan="2">Field</th>
 * <th style="background-color:#cbcefb;border-color:inherit;text-align:center" rowspan="2">Tag</th>
 * <th style="background-color:#cbcefb;border-color:inherit;text-align:center" colspan="7">Filters</th>
 * </tr>
 * <tr>
 * <td style="background-color:#dae8fc;text-align:center;" width="10%">not equal to</td>
 * <td style="background-color:#dae8fc;text-align:center;" width="10%">equal to</td>
 * <td style="background-color:#dae8fc;text-align:center;" width="10%">greater than</td>
 * <td style="background-color:#dae8fc;text-align:center;" width="10%">less than</td>
 * <td style="background-color:#dae8fc;text-align:center;" width="10%">like</td>
 * <td style="background-color:#dae8fc;text-align:center;" width="10%">in</td>
 * <td style="background-color:#dae8fc;text-align:center;" width="10%">not in</td>
 * </tr>
 * <tr>
 * <td style="border-color:inherit;text-align:left;padding-left:15px;padding-right:15px">datafileUrl</td>
 * <td style=
 * "border-color:inherit;text-align:left;padding-left:15px;padding-right:15px;font-weight:bold">TAG_FILTER_BY_DATAFILE_URL</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * </tr>
 * <tr>
 * <td style="border-color:inherit;text-align:left;padding-left:15px;padding-right:15px">name</td>
 * <td style=
 * "border-color:inherit;text-align:left;padding-left:15px;padding-right:15px;font-weight:bold">TAG_FILTER_BY_NAME</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * </tr>
 * <tr>
 * <td style="border-color:inherit;text-align:left;padding-left:15px;padding-right:15px">datafileSize</td>
 * <td style=
 * "border-color:inherit;text-align:left;padding-left:15px;padding-right:15px;font-weight:bold">TAG_FILTER_BY_DATAFILE_SIZE</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * </tr>
 * <tr>
 * <td style="border-color:inherit;text-align:left;padding-left:15px;padding-right:15px">datafileChecksum</td>
 * <td style=
 * "border-color:inherit;text-align:left;padding-left:15px;padding-right:15px;font-weight:bold">TAG_FILTER_BY_DATAFILE_CHECKSUM</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * </tr>
 * <tr>
 * <td style="border-color:inherit;text-align:left;padding-left:15px;padding-right:15px">description</td>
 * <td style=
 * "border-color:inherit;text-align:left;padding-left:15px;padding-right:15px;font-weight:bold">TAG_FILTER_BY_DESCRIPTION</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * </tr>
 * <tr>
 * <td style="border-color:inherit;text-align:left;padding-left:15px;padding-right:15px">updatedAt</td>
 * <td style=
 * "border-color:inherit;text-align:left;padding-left:15px;padding-right:15px;font-weight:bold">TAG_FILTER_BY_UPDATED_AT</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * </tr>
 * <tr>
 * <td style="border-color:inherit;text-align:left;padding-left:15px;padding-right:15px">createdAt</td>
 * <td style=
 * "border-color:inherit;text-align:left;padding-left:15px;padding-right:15px;font-weight:bold">TAG_FILTER_BY_CREATED_AT</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * </tr>
 * <tr>
 * <td style="border-color:inherit;text-align:left;padding-left:15px;padding-right:15px">id</td>
 * <td style=
 * "border-color:inherit;text-align:left;padding-left:15px;padding-right:15px;font-weight:bold">TAG_FILTER_BY_ID</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold"></td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * <td style="border-color:inherit;text-align:center;font-weight:bold">&bull;</td>
 * </tr>
 * </table>
 * </li>
 * </ul>
 */
@Preamble(description = "Options to use when listing firmware images.")
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class FirmwareImageListOptions extends ListOptions {
    /**
     * Tag for filter by createdAt.
     */
    public static final String TAG_FILTER_BY_CREATED_AT = "createdAt";

    /**
     * Tag for filter by datafileChecksum.
     */
    public static final String TAG_FILTER_BY_DATAFILE_CHECKSUM = "datafileChecksum";

    /**
     * Tag for filter by datafileSize.
     */
    public static final String TAG_FILTER_BY_DATAFILE_SIZE = "datafileSize";

    /**
     * Tag for filter by datafileUrl.
     */
    public static final String TAG_FILTER_BY_DATAFILE_URL = "datafileUrl";

    /**
     * Tag for filter by description.
     */
    public static final String TAG_FILTER_BY_DESCRIPTION = "description";

    /**
     * Tag for filter by id.
     */
    public static final String TAG_FILTER_BY_ID = "id";

    /**
     * Tag for filter by name.
     */
    public static final String TAG_FILTER_BY_NAME = "name";

    /**
     * Tag for filter by updatedAt.
     */
    public static final String TAG_FILTER_BY_UPDATED_AT = "updatedAt";

    /**
     * Internal constructor.
     *
     * <p>
     * Constructor based on all fields.
     * <p>
     * Note: Should not be used. Use {@link #FirmwareImageListOptions()} instead.
     * 
     * @param pageSize
     *            value.
     * @param maxResults
     *            value.
     * @param order
     *            enumerator value.
     * @param after
     *            value.
     * @param include
     *            value.
     * @param filter
     *            value.
     */
    @Internal
    public FirmwareImageListOptions(Integer pageSize, Long maxResults, Order order, String after,
                                    List<IncludeField> include, Filters filter) {
        super();
        this.pageSize = pageSize;
        this.maxResults = maxResults;
        this.order = order;
        this.after = after;
        this.include = include;
        this.filter = filter;
    }

    /**
     * Internal constructor.
     *
     * <p>
     * Constructor based on a similar object.
     * <p>
     * Note: Should not be used. Use {@link #FirmwareImageListOptions()} instead.
     * 
     * @param firmwareImageListOptions
     *            a firmware image list options.
     */
    @Internal
    public FirmwareImageListOptions(FirmwareImageListOptions firmwareImageListOptions) {
        this();
        setOptions(firmwareImageListOptions);
    }

    /**
     * Constructor.
     */
    public FirmwareImageListOptions() {
        super();
        setDefault();
    }

    /**
     * Internal constructor.
     *
     * <p>
     * Constructor based on read-only fields.
     * <p>
     * Note: Should not be used. Use {@link #FirmwareImageListOptions()} instead.
     * 
     * @param after
     *            value.
     * @param include
     *            value.
     * @param filter
     *            value.
     */
    @Internal
    public FirmwareImageListOptions(String after, List<IncludeField> include, Filters filter) {
        this((Integer) null, (Long) null, Order.getDefault(), after, include, filter);
    }

    /**
     * Gets all the filters defined on field {@code updatedAt}.
     * 
     * @return All the filters by {@code updatedAt}
     */
    public List<Filter> getUpdatedAtFilters() {
        return fetchFilters(TAG_FILTER_BY_UPDATED_AT);
    }

    /**
     * Sets "an in" filter by {@code updatedAt}.
     *
     * <p>
     * Note: In this case, the filter is a string corresponding to a list of values separated by a comma
     * 
     * @param filterByUpdatedAt
     *            filter value.
     */
    public void addInUpdatedAtsFilter(String filterByUpdatedAt) {
        addInFilter(TAG_FILTER_BY_UPDATED_AT, filterByUpdatedAt);
    }

    /**
     * Sets "an in" filter by {@code updatedAt}.
     * 
     * @param filterByUpdatedAt
     *            filter value.
     */
    public void addInUpdatedAtsFilter(List<Date> filterByUpdatedAt) {
        addInFilter(TAG_FILTER_BY_UPDATED_AT, filterByUpdatedAt);
    }

    /**
     * Sets "an in" filter by {@code updatedAt}.
     * 
     * @param filterByUpdatedAt
     *            filter value.
     */
    public void addInUpdatedAtsFilter(Date... filterByUpdatedAt) {
        addInFilter(TAG_FILTER_BY_UPDATED_AT, filterByUpdatedAt);
    }

    /**
     * Sets "an in" filter by {@code updatedAt}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInUpdatedAtsFilter(String)}
     * 
     * @param filterByUpdatedAt
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inUpdatedAts(String filterByUpdatedAt) {
        addInUpdatedAtsFilter(filterByUpdatedAt);
        return (T) this;
    }

    /**
     * Sets "an in" filter by {@code updatedAt}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInUpdatedAtsFilter(java.util.List)}
     * 
     * @param filterByUpdatedAt
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inUpdatedAts(List<Date> filterByUpdatedAt) {
        addInUpdatedAtsFilter(filterByUpdatedAt);
        return (T) this;
    }

    /**
     * Sets "an in" filter by {@code updatedAt}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInUpdatedAtsFilter(java.util.Date[])}
     * 
     * @param filterByUpdatedAt
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inUpdatedAts(Date... filterByUpdatedAt) {
        addInUpdatedAtsFilter(filterByUpdatedAt);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code updatedAt}.
     *
     * <p>
     * Note: In this case, the filter is a string corresponding to a list of values separated by a comma
     * 
     * @param filterByUpdatedAt
     *            filter value.
     */
    public void addNotInUpdatedAtsFilter(String filterByUpdatedAt) {
        addNotInFilter(TAG_FILTER_BY_UPDATED_AT, filterByUpdatedAt);
    }

    /**
     * Sets "a not in" filter by {@code updatedAt}.
     * 
     * @param filterByUpdatedAt
     *            filter value.
     */
    public void addNotInUpdatedAtsFilter(List<Date> filterByUpdatedAt) {
        addNotInFilter(TAG_FILTER_BY_UPDATED_AT, filterByUpdatedAt);
    }

    /**
     * Sets "a not in" filter by {@code updatedAt}.
     * 
     * @param filterByUpdatedAt
     *            filter value.
     */
    public void addNotInUpdatedAtsFilter(Date... filterByUpdatedAt) {
        addNotInFilter(TAG_FILTER_BY_UPDATED_AT, filterByUpdatedAt);
    }

    /**
     * Sets "a not in" filter by {@code updatedAt}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInUpdatedAtsFilter(String)}
     * 
     * @param filterByUpdatedAt
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInUpdatedAts(String filterByUpdatedAt) {
        addNotInUpdatedAtsFilter(filterByUpdatedAt);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code updatedAt}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInUpdatedAtsFilter(java.util.List)}
     * 
     * @param filterByUpdatedAt
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInUpdatedAts(List<Date> filterByUpdatedAt) {
        addNotInUpdatedAtsFilter(filterByUpdatedAt);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code updatedAt}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInUpdatedAtsFilter(java.util.Date[])}
     * 
     * @param filterByUpdatedAt
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInUpdatedAts(Date... filterByUpdatedAt) {
        addNotInUpdatedAtsFilter(filterByUpdatedAt);
        return (T) this;
    }

    /**
     * Sets "a less than" filter by {@code updatedAt}.
     * 
     * @param filterByUpdatedAt
     *            filter value.
     */
    public void addLessThanUpdatedAtFilter(Date filterByUpdatedAt) {
        addLessThanFilter(TAG_FILTER_BY_UPDATED_AT, filterByUpdatedAt);
    }

    /**
     * Sets "a less than" filter by {@code updatedAt}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addLessThanUpdatedAtFilter(java.util.Date)}
     * 
     * @param filterByUpdatedAt
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T lessThanUpdatedAt(Date filterByUpdatedAt) {
        addLessThanUpdatedAtFilter(filterByUpdatedAt);
        return (T) this;
    }

    /**
     * Sets "a greater than" filter by {@code updatedAt}.
     * 
     * @param filterByUpdatedAt
     *            filter value.
     */
    public void addGreaterThanUpdatedAtFilter(Date filterByUpdatedAt) {
        addGreaterThanFilter(TAG_FILTER_BY_UPDATED_AT, filterByUpdatedAt);
    }

    /**
     * Sets "a greater than" filter by {@code updatedAt}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addGreaterThanUpdatedAtFilter(java.util.Date)}
     * 
     * @param filterByUpdatedAt
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T greaterThanUpdatedAt(Date filterByUpdatedAt) {
        addGreaterThanUpdatedAtFilter(filterByUpdatedAt);
        return (T) this;
    }

    /**
     * Gets all the filters defined on field {@code name}.
     * 
     * @return All the filters by {@code name}
     */
    public List<Filter> getNameFilters() {
        return fetchFilters(TAG_FILTER_BY_NAME);
    }

    /**
     * Sets "an equal to" filter by {@code name}.
     * 
     * @param filterByName
     *            filter value.
     */
    public void addEqualToNameFilter(String filterByName) {
        addEqualFilter(TAG_FILTER_BY_NAME, filterByName);
    }

    /**
     * Sets "an equal to" filter by {@code name}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addEqualToNameFilter(String)}
     * 
     * @param filterByName
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T equalToName(String filterByName) {
        addEqualToNameFilter(filterByName);
        return (T) this;
    }

    /**
     * Sets "a not equal to" filter by {@code name}.
     * 
     * @param filterByName
     *            filter value.
     */
    public void addNotEqualToNameFilter(String filterByName) {
        addNotEqualFilter(TAG_FILTER_BY_NAME, filterByName);
    }

    /**
     * Sets "a not equal to" filter by {@code name}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotEqualToNameFilter(String)}
     * 
     * @param filterByName
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notEqualToName(String filterByName) {
        addNotEqualToNameFilter(filterByName);
        return (T) this;
    }

    /**
     * Sets "an in" filter by {@code name}.
     *
     * <p>
     * Note: In this case, the filter is a string corresponding to a list of values separated by a comma
     * 
     * @param filterByName
     *            filter value.
     */
    public void addInNamesFilter(String filterByName) {
        addInFilter(TAG_FILTER_BY_NAME, filterByName);
    }

    /**
     * Sets "an in" filter by {@code name}.
     * 
     * @param filterByName
     *            filter value.
     */
    public void addInNamesFilter(List<String> filterByName) {
        addInFilter(TAG_FILTER_BY_NAME, filterByName);
    }

    /**
     * Sets "an in" filter by {@code name}.
     * 
     * @param filterByName
     *            filter value.
     */
    public void addInNamesFilter(String... filterByName) {
        addInFilter(TAG_FILTER_BY_NAME, filterByName);
    }

    /**
     * Sets "an in" filter by {@code name}.
     *
     * <p>
     * Similar to {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInNamesFilter(String)}
     * 
     * @param filterByName
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inNames(String filterByName) {
        addInNamesFilter(filterByName);
        return (T) this;
    }

    /**
     * Sets "an in" filter by {@code name}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInNamesFilter(java.util.List)}
     * 
     * @param filterByName
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inNames(List<String> filterByName) {
        addInNamesFilter(filterByName);
        return (T) this;
    }

    /**
     * Sets "an in" filter by {@code name}.
     *
     * <p>
     * Similar to {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInNamesFilter(String[])}
     * 
     * @param filterByName
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inNames(String... filterByName) {
        addInNamesFilter(filterByName);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code name}.
     *
     * <p>
     * Note: In this case, the filter is a string corresponding to a list of values separated by a comma
     * 
     * @param filterByName
     *            filter value.
     */
    public void addNotInNamesFilter(String filterByName) {
        addNotInFilter(TAG_FILTER_BY_NAME, filterByName);
    }

    /**
     * Sets "a not in" filter by {@code name}.
     * 
     * @param filterByName
     *            filter value.
     */
    public void addNotInNamesFilter(List<String> filterByName) {
        addNotInFilter(TAG_FILTER_BY_NAME, filterByName);
    }

    /**
     * Sets "a not in" filter by {@code name}.
     * 
     * @param filterByName
     *            filter value.
     */
    public void addNotInNamesFilter(String... filterByName) {
        addNotInFilter(TAG_FILTER_BY_NAME, filterByName);
    }

    /**
     * Sets "a not in" filter by {@code name}.
     *
     * <p>
     * Similar to {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInNamesFilter(String)}
     * 
     * @param filterByName
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInNames(String filterByName) {
        addNotInNamesFilter(filterByName);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code name}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInNamesFilter(java.util.List)}
     * 
     * @param filterByName
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInNames(List<String> filterByName) {
        addNotInNamesFilter(filterByName);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code name}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInNamesFilter(String[])}
     * 
     * @param filterByName
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInNames(String... filterByName) {
        addNotInNamesFilter(filterByName);
        return (T) this;
    }

    /**
     * Gets all the filters defined on field {@code description}.
     * 
     * @return All the filters by {@code description}
     */
    public List<Filter> getDescriptionFilters() {
        return fetchFilters(TAG_FILTER_BY_DESCRIPTION);
    }

    /**
     * Sets "an equal to" filter by {@code description}.
     * 
     * @param filterByDescription
     *            filter value.
     */
    public void addEqualToDescriptionFilter(String filterByDescription) {
        addEqualFilter(TAG_FILTER_BY_DESCRIPTION, filterByDescription);
    }

    /**
     * Sets "an equal to" filter by {@code description}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addEqualToDescriptionFilter(String)}
     * 
     * @param filterByDescription
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T equalToDescription(String filterByDescription) {
        addEqualToDescriptionFilter(filterByDescription);
        return (T) this;
    }

    /**
     * Sets "a not equal to" filter by {@code description}.
     * 
     * @param filterByDescription
     *            filter value.
     */
    public void addNotEqualToDescriptionFilter(String filterByDescription) {
        addNotEqualFilter(TAG_FILTER_BY_DESCRIPTION, filterByDescription);
    }

    /**
     * Sets "a not equal to" filter by {@code description}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotEqualToDescriptionFilter(String)}
     * 
     * @param filterByDescription
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notEqualToDescription(String filterByDescription) {
        addNotEqualToDescriptionFilter(filterByDescription);
        return (T) this;
    }

    /**
     * Sets "an in" filter by {@code description}.
     *
     * <p>
     * Note: In this case, the filter is a string corresponding to a list of values separated by a comma
     * 
     * @param filterByDescription
     *            filter value.
     */
    public void addInDescriptionsFilter(String filterByDescription) {
        addInFilter(TAG_FILTER_BY_DESCRIPTION, filterByDescription);
    }

    /**
     * Sets "an in" filter by {@code description}.
     * 
     * @param filterByDescription
     *            filter value.
     */
    public void addInDescriptionsFilter(List<String> filterByDescription) {
        addInFilter(TAG_FILTER_BY_DESCRIPTION, filterByDescription);
    }

    /**
     * Sets "an in" filter by {@code description}.
     * 
     * @param filterByDescription
     *            filter value.
     */
    public void addInDescriptionsFilter(String... filterByDescription) {
        addInFilter(TAG_FILTER_BY_DESCRIPTION, filterByDescription);
    }

    /**
     * Sets "an in" filter by {@code description}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInDescriptionsFilter(String)}
     * 
     * @param filterByDescription
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inDescriptions(String filterByDescription) {
        addInDescriptionsFilter(filterByDescription);
        return (T) this;
    }

    /**
     * Sets "an in" filter by {@code description}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInDescriptionsFilter(java.util.List)}
     * 
     * @param filterByDescription
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inDescriptions(List<String> filterByDescription) {
        addInDescriptionsFilter(filterByDescription);
        return (T) this;
    }

    /**
     * Sets "an in" filter by {@code description}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInDescriptionsFilter(String[])}
     * 
     * @param filterByDescription
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inDescriptions(String... filterByDescription) {
        addInDescriptionsFilter(filterByDescription);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code description}.
     *
     * <p>
     * Note: In this case, the filter is a string corresponding to a list of values separated by a comma
     * 
     * @param filterByDescription
     *            filter value.
     */
    public void addNotInDescriptionsFilter(String filterByDescription) {
        addNotInFilter(TAG_FILTER_BY_DESCRIPTION, filterByDescription);
    }

    /**
     * Sets "a not in" filter by {@code description}.
     * 
     * @param filterByDescription
     *            filter value.
     */
    public void addNotInDescriptionsFilter(List<String> filterByDescription) {
        addNotInFilter(TAG_FILTER_BY_DESCRIPTION, filterByDescription);
    }

    /**
     * Sets "a not in" filter by {@code description}.
     * 
     * @param filterByDescription
     *            filter value.
     */
    public void addNotInDescriptionsFilter(String... filterByDescription) {
        addNotInFilter(TAG_FILTER_BY_DESCRIPTION, filterByDescription);
    }

    /**
     * Sets "a not in" filter by {@code description}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInDescriptionsFilter(String)}
     * 
     * @param filterByDescription
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInDescriptions(String filterByDescription) {
        addNotInDescriptionsFilter(filterByDescription);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code description}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInDescriptionsFilter(java.util.List)}
     * 
     * @param filterByDescription
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInDescriptions(List<String> filterByDescription) {
        addNotInDescriptionsFilter(filterByDescription);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code description}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInDescriptionsFilter(String[])}
     * 
     * @param filterByDescription
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInDescriptions(String... filterByDescription) {
        addNotInDescriptionsFilter(filterByDescription);
        return (T) this;
    }

    /**
     * Gets all the filters defined on field {@code createdAt}.
     * 
     * @return All the filters by {@code createdAt}
     */
    public List<Filter> getCreatedAtFilters() {
        return fetchFilters(TAG_FILTER_BY_CREATED_AT);
    }

    /**
     * Sets "an in" filter by {@code createdAt}.
     *
     * <p>
     * Note: In this case, the filter is a string corresponding to a list of values separated by a comma
     * 
     * @param filterByCreatedAt
     *            filter value.
     */
    public void addInCreatedAtsFilter(String filterByCreatedAt) {
        addInFilter(TAG_FILTER_BY_CREATED_AT, filterByCreatedAt);
    }

    /**
     * Sets "an in" filter by {@code createdAt}.
     * 
     * @param filterByCreatedAt
     *            filter value.
     */
    public void addInCreatedAtsFilter(List<Date> filterByCreatedAt) {
        addInFilter(TAG_FILTER_BY_CREATED_AT, filterByCreatedAt);
    }

    /**
     * Sets "an in" filter by {@code createdAt}.
     * 
     * @param filterByCreatedAt
     *            filter value.
     */
    public void addInCreatedAtsFilter(Date... filterByCreatedAt) {
        addInFilter(TAG_FILTER_BY_CREATED_AT, filterByCreatedAt);
    }

    /**
     * Sets "an in" filter by {@code createdAt}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInCreatedAtsFilter(String)}
     * 
     * @param filterByCreatedAt
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inCreatedAts(String filterByCreatedAt) {
        addInCreatedAtsFilter(filterByCreatedAt);
        return (T) this;
    }

    /**
     * Sets "an in" filter by {@code createdAt}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInCreatedAtsFilter(java.util.List)}
     * 
     * @param filterByCreatedAt
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inCreatedAts(List<Date> filterByCreatedAt) {
        addInCreatedAtsFilter(filterByCreatedAt);
        return (T) this;
    }

    /**
     * Sets "an in" filter by {@code createdAt}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInCreatedAtsFilter(java.util.Date[])}
     * 
     * @param filterByCreatedAt
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inCreatedAts(Date... filterByCreatedAt) {
        addInCreatedAtsFilter(filterByCreatedAt);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code createdAt}.
     *
     * <p>
     * Note: In this case, the filter is a string corresponding to a list of values separated by a comma
     * 
     * @param filterByCreatedAt
     *            filter value.
     */
    public void addNotInCreatedAtsFilter(String filterByCreatedAt) {
        addNotInFilter(TAG_FILTER_BY_CREATED_AT, filterByCreatedAt);
    }

    /**
     * Sets "a not in" filter by {@code createdAt}.
     * 
     * @param filterByCreatedAt
     *            filter value.
     */
    public void addNotInCreatedAtsFilter(List<Date> filterByCreatedAt) {
        addNotInFilter(TAG_FILTER_BY_CREATED_AT, filterByCreatedAt);
    }

    /**
     * Sets "a not in" filter by {@code createdAt}.
     * 
     * @param filterByCreatedAt
     *            filter value.
     */
    public void addNotInCreatedAtsFilter(Date... filterByCreatedAt) {
        addNotInFilter(TAG_FILTER_BY_CREATED_AT, filterByCreatedAt);
    }

    /**
     * Sets "a not in" filter by {@code createdAt}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInCreatedAtsFilter(String)}
     * 
     * @param filterByCreatedAt
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInCreatedAts(String filterByCreatedAt) {
        addNotInCreatedAtsFilter(filterByCreatedAt);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code createdAt}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInCreatedAtsFilter(java.util.List)}
     * 
     * @param filterByCreatedAt
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInCreatedAts(List<Date> filterByCreatedAt) {
        addNotInCreatedAtsFilter(filterByCreatedAt);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code createdAt}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInCreatedAtsFilter(java.util.Date[])}
     * 
     * @param filterByCreatedAt
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInCreatedAts(Date... filterByCreatedAt) {
        addNotInCreatedAtsFilter(filterByCreatedAt);
        return (T) this;
    }

    /**
     * Sets "a less than" filter by {@code createdAt}.
     * 
     * @param filterByCreatedAt
     *            filter value.
     */
    public void addLessThanCreatedAtFilter(Date filterByCreatedAt) {
        addLessThanFilter(TAG_FILTER_BY_CREATED_AT, filterByCreatedAt);
    }

    /**
     * Sets "a less than" filter by {@code createdAt}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addLessThanCreatedAtFilter(java.util.Date)}
     * 
     * @param filterByCreatedAt
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T lessThanCreatedAt(Date filterByCreatedAt) {
        addLessThanCreatedAtFilter(filterByCreatedAt);
        return (T) this;
    }

    /**
     * Sets "a greater than" filter by {@code createdAt}.
     * 
     * @param filterByCreatedAt
     *            filter value.
     */
    public void addGreaterThanCreatedAtFilter(Date filterByCreatedAt) {
        addGreaterThanFilter(TAG_FILTER_BY_CREATED_AT, filterByCreatedAt);
    }

    /**
     * Sets "a greater than" filter by {@code createdAt}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addGreaterThanCreatedAtFilter(java.util.Date)}
     * 
     * @param filterByCreatedAt
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T greaterThanCreatedAt(Date filterByCreatedAt) {
        addGreaterThanCreatedAtFilter(filterByCreatedAt);
        return (T) this;
    }

    /**
     * Gets all the filters defined on field {@code datafileUrl}.
     * 
     * @return All the filters by {@code datafileUrl}
     */
    public List<Filter> getDatafileUrlFilters() {
        return fetchFilters(TAG_FILTER_BY_DATAFILE_URL);
    }

    /**
     * Sets "an equal to" filter by {@code datafileUrl}.
     * 
     * @param filterByDatafileUrl
     *            filter value.
     */
    public void addEqualToDatafileUrlFilter(String filterByDatafileUrl) {
        addEqualFilter(TAG_FILTER_BY_DATAFILE_URL, filterByDatafileUrl);
    }

    /**
     * Sets "an equal to" filter by {@code datafileUrl}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addEqualToDatafileUrlFilter(String)}
     * 
     * @param filterByDatafileUrl
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T equalToDatafileUrl(String filterByDatafileUrl) {
        addEqualToDatafileUrlFilter(filterByDatafileUrl);
        return (T) this;
    }

    /**
     * Sets "a not equal to" filter by {@code datafileUrl}.
     * 
     * @param filterByDatafileUrl
     *            filter value.
     */
    public void addNotEqualToDatafileUrlFilter(String filterByDatafileUrl) {
        addNotEqualFilter(TAG_FILTER_BY_DATAFILE_URL, filterByDatafileUrl);
    }

    /**
     * Sets "a not equal to" filter by {@code datafileUrl}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotEqualToDatafileUrlFilter(String)}
     * 
     * @param filterByDatafileUrl
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notEqualToDatafileUrl(String filterByDatafileUrl) {
        addNotEqualToDatafileUrlFilter(filterByDatafileUrl);
        return (T) this;
    }

    /**
     * Sets "an in" filter by {@code datafileUrl}.
     *
     * <p>
     * Note: In this case, the filter is a string corresponding to a list of values separated by a comma
     * 
     * @param filterByDatafileUrl
     *            filter value.
     */
    public void addInDatafileUrlsFilter(String filterByDatafileUrl) {
        addInFilter(TAG_FILTER_BY_DATAFILE_URL, filterByDatafileUrl);
    }

    /**
     * Sets "an in" filter by {@code datafileUrl}.
     * 
     * @param filterByDatafileUrl
     *            filter value.
     */
    public void addInDatafileUrlsFilter(List<String> filterByDatafileUrl) {
        addInFilter(TAG_FILTER_BY_DATAFILE_URL, filterByDatafileUrl);
    }

    /**
     * Sets "an in" filter by {@code datafileUrl}.
     * 
     * @param filterByDatafileUrl
     *            filter value.
     */
    public void addInDatafileUrlsFilter(String... filterByDatafileUrl) {
        addInFilter(TAG_FILTER_BY_DATAFILE_URL, filterByDatafileUrl);
    }

    /**
     * Sets "an in" filter by {@code datafileUrl}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInDatafileUrlsFilter(String)}
     * 
     * @param filterByDatafileUrl
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inDatafileUrls(String filterByDatafileUrl) {
        addInDatafileUrlsFilter(filterByDatafileUrl);
        return (T) this;
    }

    /**
     * Sets "an in" filter by {@code datafileUrl}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInDatafileUrlsFilter(java.util.List)}
     * 
     * @param filterByDatafileUrl
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inDatafileUrls(List<String> filterByDatafileUrl) {
        addInDatafileUrlsFilter(filterByDatafileUrl);
        return (T) this;
    }

    /**
     * Sets "an in" filter by {@code datafileUrl}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInDatafileUrlsFilter(String[])}
     * 
     * @param filterByDatafileUrl
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inDatafileUrls(String... filterByDatafileUrl) {
        addInDatafileUrlsFilter(filterByDatafileUrl);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code datafileUrl}.
     *
     * <p>
     * Note: In this case, the filter is a string corresponding to a list of values separated by a comma
     * 
     * @param filterByDatafileUrl
     *            filter value.
     */
    public void addNotInDatafileUrlsFilter(String filterByDatafileUrl) {
        addNotInFilter(TAG_FILTER_BY_DATAFILE_URL, filterByDatafileUrl);
    }

    /**
     * Sets "a not in" filter by {@code datafileUrl}.
     * 
     * @param filterByDatafileUrl
     *            filter value.
     */
    public void addNotInDatafileUrlsFilter(List<String> filterByDatafileUrl) {
        addNotInFilter(TAG_FILTER_BY_DATAFILE_URL, filterByDatafileUrl);
    }

    /**
     * Sets "a not in" filter by {@code datafileUrl}.
     * 
     * @param filterByDatafileUrl
     *            filter value.
     */
    public void addNotInDatafileUrlsFilter(String... filterByDatafileUrl) {
        addNotInFilter(TAG_FILTER_BY_DATAFILE_URL, filterByDatafileUrl);
    }

    /**
     * Sets "a not in" filter by {@code datafileUrl}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInDatafileUrlsFilter(String)}
     * 
     * @param filterByDatafileUrl
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInDatafileUrls(String filterByDatafileUrl) {
        addNotInDatafileUrlsFilter(filterByDatafileUrl);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code datafileUrl}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInDatafileUrlsFilter(java.util.List)}
     * 
     * @param filterByDatafileUrl
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInDatafileUrls(List<String> filterByDatafileUrl) {
        addNotInDatafileUrlsFilter(filterByDatafileUrl);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code datafileUrl}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInDatafileUrlsFilter(String[])}
     * 
     * @param filterByDatafileUrl
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInDatafileUrls(String... filterByDatafileUrl) {
        addNotInDatafileUrlsFilter(filterByDatafileUrl);
        return (T) this;
    }

    /**
     * Gets all the filters defined on field {@code datafileSize}.
     * 
     * @return All the filters by {@code datafileSize}
     */
    public List<Filter> getDatafileSizeFilters() {
        return fetchFilters(TAG_FILTER_BY_DATAFILE_SIZE);
    }

    /**
     * Sets "an equal to" filter by {@code datafileSize}.
     * 
     * @param filterByDatafileSize
     *            filter value.
     */
    public void addEqualToDatafileSizeFilter(long filterByDatafileSize) {
        addEqualFilter(TAG_FILTER_BY_DATAFILE_SIZE, Long.valueOf(filterByDatafileSize));
    }

    /**
     * Sets "an equal to" filter by {@code datafileSize}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addEqualToDatafileSizeFilter(long)}
     * 
     * @param filterByDatafileSize
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T equalToDatafileSize(long filterByDatafileSize) {
        addEqualToDatafileSizeFilter(filterByDatafileSize);
        return (T) this;
    }

    /**
     * Sets "a not equal to" filter by {@code datafileSize}.
     * 
     * @param filterByDatafileSize
     *            filter value.
     */
    public void addNotEqualToDatafileSizeFilter(long filterByDatafileSize) {
        addNotEqualFilter(TAG_FILTER_BY_DATAFILE_SIZE, Long.valueOf(filterByDatafileSize));
    }

    /**
     * Sets "a not equal to" filter by {@code datafileSize}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotEqualToDatafileSizeFilter(long)}
     * 
     * @param filterByDatafileSize
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notEqualToDatafileSize(long filterByDatafileSize) {
        addNotEqualToDatafileSizeFilter(filterByDatafileSize);
        return (T) this;
    }

    /**
     * Sets "an in" filter by {@code datafileSize}.
     *
     * <p>
     * Note: In this case, the filter is a string corresponding to a list of values separated by a comma
     * 
     * @param filterByDatafileSize
     *            filter value.
     */
    public void addInDatafileSizesFilter(String filterByDatafileSize) {
        addInFilter(TAG_FILTER_BY_DATAFILE_SIZE, filterByDatafileSize);
    }

    /**
     * Sets "an in" filter by {@code datafileSize}.
     * 
     * @param filterByDatafileSize
     *            filter value.
     */
    public void addInDatafileSizesFilter(List<Long> filterByDatafileSize) {
        addInFilter(TAG_FILTER_BY_DATAFILE_SIZE, filterByDatafileSize);
    }

    /**
     * Sets "an in" filter by {@code datafileSize}.
     * 
     * @param filterByDatafileSize
     *            filter value.
     */
    public void addInDatafileSizesFilter(Long... filterByDatafileSize) {
        addInFilter(TAG_FILTER_BY_DATAFILE_SIZE, filterByDatafileSize);
    }

    /**
     * Sets "an in" filter by {@code datafileSize}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInDatafileSizesFilter(String)}
     * 
     * @param filterByDatafileSize
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inDatafileSizes(String filterByDatafileSize) {
        addInDatafileSizesFilter(filterByDatafileSize);
        return (T) this;
    }

    /**
     * Sets "an in" filter by {@code datafileSize}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInDatafileSizesFilter(java.util.List)}
     * 
     * @param filterByDatafileSize
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inDatafileSizes(List<Long> filterByDatafileSize) {
        addInDatafileSizesFilter(filterByDatafileSize);
        return (T) this;
    }

    /**
     * Sets "an in" filter by {@code datafileSize}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInDatafileSizesFilter(Long[])}
     * 
     * @param filterByDatafileSize
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inDatafileSizes(Long... filterByDatafileSize) {
        addInDatafileSizesFilter(filterByDatafileSize);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code datafileSize}.
     *
     * <p>
     * Note: In this case, the filter is a string corresponding to a list of values separated by a comma
     * 
     * @param filterByDatafileSize
     *            filter value.
     */
    public void addNotInDatafileSizesFilter(String filterByDatafileSize) {
        addNotInFilter(TAG_FILTER_BY_DATAFILE_SIZE, filterByDatafileSize);
    }

    /**
     * Sets "a not in" filter by {@code datafileSize}.
     * 
     * @param filterByDatafileSize
     *            filter value.
     */
    public void addNotInDatafileSizesFilter(List<Long> filterByDatafileSize) {
        addNotInFilter(TAG_FILTER_BY_DATAFILE_SIZE, filterByDatafileSize);
    }

    /**
     * Sets "a not in" filter by {@code datafileSize}.
     * 
     * @param filterByDatafileSize
     *            filter value.
     */
    public void addNotInDatafileSizesFilter(Long... filterByDatafileSize) {
        addNotInFilter(TAG_FILTER_BY_DATAFILE_SIZE, filterByDatafileSize);
    }

    /**
     * Sets "a not in" filter by {@code datafileSize}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInDatafileSizesFilter(String)}
     * 
     * @param filterByDatafileSize
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInDatafileSizes(String filterByDatafileSize) {
        addNotInDatafileSizesFilter(filterByDatafileSize);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code datafileSize}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInDatafileSizesFilter(java.util.List)}
     * 
     * @param filterByDatafileSize
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInDatafileSizes(List<Long> filterByDatafileSize) {
        addNotInDatafileSizesFilter(filterByDatafileSize);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code datafileSize}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInDatafileSizesFilter(Long[])}
     * 
     * @param filterByDatafileSize
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInDatafileSizes(Long... filterByDatafileSize) {
        addNotInDatafileSizesFilter(filterByDatafileSize);
        return (T) this;
    }

    /**
     * Gets all the filters defined on field {@code datafileChecksum}.
     * 
     * @return All the filters by {@code datafileChecksum}
     */
    public List<Filter> getDatafileChecksumFilters() {
        return fetchFilters(TAG_FILTER_BY_DATAFILE_CHECKSUM);
    }

    /**
     * Sets "an equal to" filter by {@code datafileChecksum}.
     * 
     * @param filterByDatafileChecksum
     *            filter value.
     */
    public void addEqualToDatafileChecksumFilter(String filterByDatafileChecksum) {
        addEqualFilter(TAG_FILTER_BY_DATAFILE_CHECKSUM, filterByDatafileChecksum);
    }

    /**
     * Sets "an equal to" filter by {@code datafileChecksum}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addEqualToDatafileChecksumFilter(String)}
     * 
     * @param filterByDatafileChecksum
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T equalToDatafileChecksum(String filterByDatafileChecksum) {
        addEqualToDatafileChecksumFilter(filterByDatafileChecksum);
        return (T) this;
    }

    /**
     * Sets "a not equal to" filter by {@code datafileChecksum}.
     * 
     * @param filterByDatafileChecksum
     *            filter value.
     */
    public void addNotEqualToDatafileChecksumFilter(String filterByDatafileChecksum) {
        addNotEqualFilter(TAG_FILTER_BY_DATAFILE_CHECKSUM, filterByDatafileChecksum);
    }

    /**
     * Sets "a not equal to" filter by {@code datafileChecksum}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotEqualToDatafileChecksumFilter(String)}
     * 
     * @param filterByDatafileChecksum
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notEqualToDatafileChecksum(String filterByDatafileChecksum) {
        addNotEqualToDatafileChecksumFilter(filterByDatafileChecksum);
        return (T) this;
    }

    /**
     * Sets "an in" filter by {@code datafileChecksum}.
     *
     * <p>
     * Note: In this case, the filter is a string corresponding to a list of values separated by a comma
     * 
     * @param filterByDatafileChecksum
     *            filter value.
     */
    public void addInDatafileChecksumsFilter(String filterByDatafileChecksum) {
        addInFilter(TAG_FILTER_BY_DATAFILE_CHECKSUM, filterByDatafileChecksum);
    }

    /**
     * Sets "an in" filter by {@code datafileChecksum}.
     * 
     * @param filterByDatafileChecksum
     *            filter value.
     */
    public void addInDatafileChecksumsFilter(List<String> filterByDatafileChecksum) {
        addInFilter(TAG_FILTER_BY_DATAFILE_CHECKSUM, filterByDatafileChecksum);
    }

    /**
     * Sets "an in" filter by {@code datafileChecksum}.
     * 
     * @param filterByDatafileChecksum
     *            filter value.
     */
    public void addInDatafileChecksumsFilter(String... filterByDatafileChecksum) {
        addInFilter(TAG_FILTER_BY_DATAFILE_CHECKSUM, filterByDatafileChecksum);
    }

    /**
     * Sets "an in" filter by {@code datafileChecksum}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInDatafileChecksumsFilter(String)}
     * 
     * @param filterByDatafileChecksum
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inDatafileChecksums(String filterByDatafileChecksum) {
        addInDatafileChecksumsFilter(filterByDatafileChecksum);
        return (T) this;
    }

    /**
     * Sets "an in" filter by {@code datafileChecksum}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInDatafileChecksumsFilter(java.util.List)}
     * 
     * @param filterByDatafileChecksum
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inDatafileChecksums(List<String> filterByDatafileChecksum) {
        addInDatafileChecksumsFilter(filterByDatafileChecksum);
        return (T) this;
    }

    /**
     * Sets "an in" filter by {@code datafileChecksum}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInDatafileChecksumsFilter(String[])}
     * 
     * @param filterByDatafileChecksum
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inDatafileChecksums(String... filterByDatafileChecksum) {
        addInDatafileChecksumsFilter(filterByDatafileChecksum);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code datafileChecksum}.
     *
     * <p>
     * Note: In this case, the filter is a string corresponding to a list of values separated by a comma
     * 
     * @param filterByDatafileChecksum
     *            filter value.
     */
    public void addNotInDatafileChecksumsFilter(String filterByDatafileChecksum) {
        addNotInFilter(TAG_FILTER_BY_DATAFILE_CHECKSUM, filterByDatafileChecksum);
    }

    /**
     * Sets "a not in" filter by {@code datafileChecksum}.
     * 
     * @param filterByDatafileChecksum
     *            filter value.
     */
    public void addNotInDatafileChecksumsFilter(List<String> filterByDatafileChecksum) {
        addNotInFilter(TAG_FILTER_BY_DATAFILE_CHECKSUM, filterByDatafileChecksum);
    }

    /**
     * Sets "a not in" filter by {@code datafileChecksum}.
     * 
     * @param filterByDatafileChecksum
     *            filter value.
     */
    public void addNotInDatafileChecksumsFilter(String... filterByDatafileChecksum) {
        addNotInFilter(TAG_FILTER_BY_DATAFILE_CHECKSUM, filterByDatafileChecksum);
    }

    /**
     * Sets "a not in" filter by {@code datafileChecksum}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInDatafileChecksumsFilter(String)}
     * 
     * @param filterByDatafileChecksum
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInDatafileChecksums(String filterByDatafileChecksum) {
        addNotInDatafileChecksumsFilter(filterByDatafileChecksum);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code datafileChecksum}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInDatafileChecksumsFilter(java.util.List)}
     * 
     * @param filterByDatafileChecksum
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInDatafileChecksums(List<String> filterByDatafileChecksum) {
        addNotInDatafileChecksumsFilter(filterByDatafileChecksum);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code datafileChecksum}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInDatafileChecksumsFilter(String[])}
     * 
     * @param filterByDatafileChecksum
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInDatafileChecksums(String... filterByDatafileChecksum) {
        addNotInDatafileChecksumsFilter(filterByDatafileChecksum);
        return (T) this;
    }

    /**
     * Gets all the filters defined on field {@code id}.
     * 
     * @return All the filters by {@code id}
     */
    public List<Filter> getIdFilters() {
        return fetchFilters(TAG_FILTER_BY_ID);
    }

    /**
     * Sets "an equal to" filter by {@code id}.
     * 
     * @param filterById
     *            filter value.
     */
    public void addEqualToIdFilter(String filterById) {
        addEqualFilter(TAG_FILTER_BY_ID, filterById);
    }

    /**
     * Sets "an equal to" filter by {@code id}.
     *
     * <p>
     * Similar to {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addEqualToIdFilter(String)}
     * 
     * @param filterById
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T equalToId(String filterById) {
        addEqualToIdFilter(filterById);
        return (T) this;
    }

    /**
     * Sets "a not equal to" filter by {@code id}.
     * 
     * @param filterById
     *            filter value.
     */
    public void addNotEqualToIdFilter(String filterById) {
        addNotEqualFilter(TAG_FILTER_BY_ID, filterById);
    }

    /**
     * Sets "a not equal to" filter by {@code id}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotEqualToIdFilter(String)}
     * 
     * @param filterById
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notEqualToId(String filterById) {
        addNotEqualToIdFilter(filterById);
        return (T) this;
    }

    /**
     * Sets "an in" filter by {@code id}.
     *
     * <p>
     * Note: In this case, the filter is a string corresponding to a list of values separated by a comma
     * 
     * @param filterById
     *            filter value.
     */
    public void addInIdsFilter(String filterById) {
        addInFilter(TAG_FILTER_BY_ID, filterById);
    }

    /**
     * Sets "an in" filter by {@code id}.
     * 
     * @param filterById
     *            filter value.
     */
    public void addInIdsFilter(List<String> filterById) {
        addInFilter(TAG_FILTER_BY_ID, filterById);
    }

    /**
     * Sets "an in" filter by {@code id}.
     * 
     * @param filterById
     *            filter value.
     */
    public void addInIdsFilter(String... filterById) {
        addInFilter(TAG_FILTER_BY_ID, filterById);
    }

    /**
     * Sets "an in" filter by {@code id}.
     *
     * <p>
     * Similar to {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInIdsFilter(String)}
     * 
     * @param filterById
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inIds(String filterById) {
        addInIdsFilter(filterById);
        return (T) this;
    }

    /**
     * Sets "an in" filter by {@code id}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInIdsFilter(java.util.List)}
     * 
     * @param filterById
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inIds(List<String> filterById) {
        addInIdsFilter(filterById);
        return (T) this;
    }

    /**
     * Sets "an in" filter by {@code id}.
     *
     * <p>
     * Similar to {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addInIdsFilter(String[])}
     * 
     * @param filterById
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T inIds(String... filterById) {
        addInIdsFilter(filterById);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code id}.
     *
     * <p>
     * Note: In this case, the filter is a string corresponding to a list of values separated by a comma
     * 
     * @param filterById
     *            filter value.
     */
    public void addNotInIdsFilter(String filterById) {
        addNotInFilter(TAG_FILTER_BY_ID, filterById);
    }

    /**
     * Sets "a not in" filter by {@code id}.
     * 
     * @param filterById
     *            filter value.
     */
    public void addNotInIdsFilter(List<String> filterById) {
        addNotInFilter(TAG_FILTER_BY_ID, filterById);
    }

    /**
     * Sets "a not in" filter by {@code id}.
     * 
     * @param filterById
     *            filter value.
     */
    public void addNotInIdsFilter(String... filterById) {
        addNotInFilter(TAG_FILTER_BY_ID, filterById);
    }

    /**
     * Sets "a not in" filter by {@code id}.
     *
     * <p>
     * Similar to {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInIdsFilter(String)}
     * 
     * @param filterById
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInIds(String filterById) {
        addNotInIdsFilter(filterById);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code id}.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInIdsFilter(java.util.List)}
     * 
     * @param filterById
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInIds(List<String> filterById) {
        addNotInIdsFilter(filterById);
        return (T) this;
    }

    /**
     * Sets "a not in" filter by {@code id}.
     *
     * <p>
     * Similar to {@link com.arm.mbed.cloud.sdk.deviceupdate.model.FirmwareImageListOptions#addNotInIdsFilter(String[])}
     * 
     * @param filterById
     *            filter value.
     * @return These list options
     */
    @SuppressWarnings("unchecked")
    public <T extends FirmwareImageListOptions> T notInIds(String... filterById) {
        addNotInIdsFilter(filterById);
        return (T) this;
    }

    /**
     * Returns a string representation of the object.
     *
     * <p>
     * 
     * @see java.lang.Object#toString()
     * @return the string representation
     */
    @Override
    public String toString() {
        return "FirmwareImageListOptions [pageSize=" + pageSize + ", maxResults=" + maxResults + ", order=" + order
               + ", after=" + after + ", include="
               + com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder.encodeInclude(this) + ", filter="
               + retrieveFilterAsJson() + "]";
    }

    /**
     * Method to ensure {@link #equals(Object)} is correct.
     *
     * <p>
     * Note: see this article: <a href="https://www.artima.com/lejava/articles/equality.html">canEqual()</a>
     * 
     * @param other
     *            another object.
     * @return true if the other object is an instance of the class in which canEqual is (re)defined, false otherwise.
     */
    @Override
    protected boolean canEqual(Object other) {
        return other instanceof FirmwareImageListOptions;
    }

    /**
     * Clones this instance.
     *
     * <p>
     * 
     * @see java.lang.Object#clone()
     * @return a cloned instance
     */
    @Override
    public FirmwareImageListOptions clone() {
        final FirmwareImageListOptions opt = new FirmwareImageListOptions();
        opt.setOptions(this);
        return opt;
    }

    /**
     * Indicates whether some other object is "equal to" this one.
     *
     * <p>
     * 
     * @see java.lang.Object#equals(java.lang.Object)
     * @param obj
     *            an object to compare with this instance.
     * @return true if this object is the same as the obj argument; false otherwise.
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (!super.equals(obj)) {
            return false;
        }
        if (!(obj instanceof FirmwareImageListOptions)) {
            return false;
        }
        final FirmwareImageListOptions other = (FirmwareImageListOptions) obj;
        if (!other.canEqual(this)) {
            return false;
        }
        return true;
    }

    /**
     * Calculates the hash code of this instance based on field values.
     *
     * <p>
     * 
     * @see java.lang.Object#hashCode()
     * @return hash code
     */
    @Override
    @SuppressWarnings("PMD.UselessOverridingMethod")
    public int hashCode() {
        return super.hashCode();
    }
}
