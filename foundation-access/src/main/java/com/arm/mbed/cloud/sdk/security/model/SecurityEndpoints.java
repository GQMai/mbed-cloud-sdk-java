// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import com.arm.mbed.cloud.sdk.annotations.Internal;
import com.arm.mbed.cloud.sdk.annotations.Preamble;
import com.arm.mbed.cloud.sdk.common.AbstractEndpoints;
import com.arm.mbed.cloud.sdk.common.ServiceRegistry;
import com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.api.CertificateIssuersActivationApi;
import com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.api.CertificateIssuersApi;
import com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.api.DeviceSecurityCertificatesApi;
import com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.api.DeviceSecurityDeveloperClassCertificatesApi;
import com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.api.DeviceSecurityDeviceCertificateRenewalsApi;
import com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.api.PreSharedKeysApi;
import com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.api.ServiceSecurityServerCredentialsApi;
import com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.api.TenantDeviceSecurityCertificatesApi;

/**
 * Endpoints for Security APIs module.
 */
@Preamble(description = "Endpoints for Security APIs module.")
@Internal
@SuppressWarnings("PMD.CyclomaticComplexity")
public class SecurityEndpoints extends AbstractEndpoints {
    /**
     * Low level endpoints for device security device certificate renewals apis.
     */
    @Internal
    private final DeviceSecurityDeviceCertificateRenewalsApi deviceSecurityDeviceCertificateRenewalsApi;

    /**
     * Low level endpoints for certificate issuers apis.
     */
    @Internal
    private final CertificateIssuersApi certificateIssuersApi;

    /**
     * Low level endpoints for certificate issuers activation apis.
     */
    @Internal
    private final CertificateIssuersActivationApi certificateIssuersActivationApi;

    /**
     * Low level endpoints for device security developer class certificates apis.
     */
    @Internal
    private final DeviceSecurityDeveloperClassCertificatesApi deviceSecurityDeveloperClassCertificatesApi;

    /**
     * Low level endpoints for device security certificates apis.
     */
    @Internal
    private final DeviceSecurityCertificatesApi deviceSecurityCertificatesApi;

    /**
     * Low level endpoints for pre shared keys apis.
     */
    @Internal
    private final PreSharedKeysApi preSharedKeysApi;

    /**
     * Low level endpoints for service security server credentials apis.
     */
    @Internal
    private final ServiceSecurityServerCredentialsApi serviceSecurityServerCredentialsApi;

    /**
     * Low level endpoints for tenant device security certificates apis.
     */
    @Internal
    private final TenantDeviceSecurityCertificatesApi tenantDeviceSecurityCertificatesApi;

    /**
     * Constructor.
     * 
     * @param services
     *            created services {@link ServiceRegistry}.
     */
    public SecurityEndpoints(ServiceRegistry services) {
        super(services);
        this.deviceSecurityDeviceCertificateRenewalsApi = initialiseService(DeviceSecurityDeviceCertificateRenewalsApi.class);
        this.certificateIssuersApi = initialiseService(CertificateIssuersApi.class);
        this.certificateIssuersActivationApi = initialiseService(CertificateIssuersActivationApi.class);
        this.deviceSecurityDeveloperClassCertificatesApi = initialiseService(DeviceSecurityDeveloperClassCertificatesApi.class);
        this.deviceSecurityCertificatesApi = initialiseService(DeviceSecurityCertificatesApi.class);
        this.preSharedKeysApi = initialiseService(PreSharedKeysApi.class);
        this.serviceSecurityServerCredentialsApi = initialiseService(ServiceSecurityServerCredentialsApi.class);
        this.tenantDeviceSecurityCertificatesApi = initialiseService(TenantDeviceSecurityCertificatesApi.class);
    }

    /**
     * Gets low level endpoints for certificate issuers apis.
     * 
     * @return certificateIssuersApi
     */
    @Internal
    public CertificateIssuersApi getCertificateIssuersApi() {
        return certificateIssuersApi;
    }

    /**
     * Gets low level endpoints for certificate issuers activation apis.
     * 
     * @return certificateIssuersActivationApi
     */
    @Internal
    public CertificateIssuersActivationApi getCertificateIssuersActivationApi() {
        return certificateIssuersActivationApi;
    }

    /**
     * Gets low level endpoints for device security developer class certificates apis.
     * 
     * @return deviceSecurityDeveloperClassCertificatesApi
     */
    @Internal
    public DeviceSecurityDeveloperClassCertificatesApi getDeviceSecurityDeveloperClassCertificatesApi() {
        return deviceSecurityDeveloperClassCertificatesApi;
    }

    /**
     * Gets low level endpoints for device security certificates apis.
     * 
     * @return deviceSecurityCertificatesApi
     */
    @Internal
    public DeviceSecurityCertificatesApi getDeviceSecurityCertificatesApi() {
        return deviceSecurityCertificatesApi;
    }

    /**
     * Gets low level endpoints for pre shared keys apis.
     * 
     * @return preSharedKeysApi
     */
    @Internal
    public PreSharedKeysApi getPreSharedKeysApi() {
        return preSharedKeysApi;
    }

    /**
     * Gets low level endpoints for service security server credentials apis.
     * 
     * @return serviceSecurityServerCredentialsApi
     */
    @Internal
    public ServiceSecurityServerCredentialsApi getServiceSecurityServerCredentialsApi() {
        return serviceSecurityServerCredentialsApi;
    }

    /**
     * Gets low level endpoints for tenant device security certificates apis.
     * 
     * @return tenantDeviceSecurityCertificatesApi
     */
    @Internal
    public TenantDeviceSecurityCertificatesApi getTenantDeviceSecurityCertificatesApi() {
        return tenantDeviceSecurityCertificatesApi;
    }

    /**
     * Gets low level endpoints for device security device certificate renewals apis.
     * 
     * @return deviceSecurityDeviceCertificateRenewalsApi
     */
    @Internal
    public DeviceSecurityDeviceCertificateRenewalsApi getDeviceSecurityDeviceCertificateRenewalsApi() {
        return deviceSecurityDeviceCertificateRenewalsApi;
    }

    /**
     * Clones this instance.
     *
     * <p>
     * 
     * @see java.lang.Object#clone()
     * @return a cloned instance
     */
    @Override
    public SecurityEndpoints clone() {
        return new SecurityEndpoints(getRegistryClone());
    }
}
