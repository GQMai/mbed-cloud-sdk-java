// This file was generated by the Pelion SDK foundation code generator.
// This model class was autogenerated on Thu May 02 10:47:50 UTC 2019. Feel free to change its contents as you wish.
package com.arm.mbed.cloud.sdk.security.model;

import com.arm.mbed.cloud.sdk.Security;
import com.arm.mbed.cloud.sdk.annotations.NonNull;
import com.arm.mbed.cloud.sdk.annotations.NotImplemented;
import com.arm.mbed.cloud.sdk.annotations.Preamble;
import com.arm.mbed.cloud.sdk.common.ApiClientWrapper;
import com.arm.mbed.cloud.sdk.common.ApiUtils;
import com.arm.mbed.cloud.sdk.common.ConnectionOptions;
import com.arm.mbed.cloud.sdk.common.MbedCloudException;
import com.arm.mbed.cloud.sdk.common.NotImplementedException;
import com.arm.mbed.cloud.sdk.common.SdkContext;

/**
 * Data Access Object (DAO) for pre shared keys.
 * <p>
 * 
 * @see <a href="http://www.corej2eepatterns.com/Patterns/DataAccessObject.htm">Core J2EE Patterns - Data Access
 *      Object</a>
 */
@Preamble(description = "Data Access Object (DAO) for pre shared keys.")
public class PreSharedKeyDao extends AbstractPreSharedKeyDao {
    /**
     * Constructor.
     * 
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    public PreSharedKeyDao() throws MbedCloudException {
        super();
    }

    /**
     * Constructor.
     * 
     * @param client
     *            an api client wrapper.
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    public PreSharedKeyDao(ApiClientWrapper client) throws MbedCloudException {
        super(client);
    }

    /**
     * Constructor.
     * 
     * @param options
     *            a connection options.
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    public PreSharedKeyDao(ConnectionOptions options) throws MbedCloudException {
        super(options);
    }

    /**
     * Constructor.
     * 
     * @param sdkContext
     *            an sdk context.
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    public PreSharedKeyDao(SdkContext sdkContext) throws MbedCloudException {
        super(sdkContext);
    }

    /**
     * Clones this instance.
     *
     * <p>
     * 
     * @see java.lang.Object#clone()
     * @return a cloned instance
     */
    @Override
    @SuppressWarnings({ "resource", "unused" })
    public PreSharedKeyDao clone() {
        try {
            return new PreSharedKeyDao().configureAndGet(getModuleOrThrow() == null ? null
                                                                                    : getModuleOrThrow().clone());
        } catch (MbedCloudException exception) {
            return null;
        }
    }

    /**
     * Executes create.
     * 
     * @return something
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    @Override
    @NotImplemented
    public PreSharedKey create() throws MbedCloudException, NotImplementedException {
        // TODO Auto-generated method stub.;
        throw new NotImplementedException();
    }

    /**
     * Executes create.
     * 
     * @param modelToCreate
     *            an sdk model.
     * @return something
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    @Override
    @NotImplemented
    public PreSharedKey create(PreSharedKey modelToCreate) throws MbedCloudException, NotImplementedException {
        // TODO Auto-generated method stub.;
        throw new NotImplementedException();
    }

    /**
     * Adds a pre shared key.
     * 
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.Security#createPreSharedKey(String, com.arm.mbed.cloud.sdk.security.model.PreSharedKey)}
     * 
     * @param modelToCreate
     *            an sdk model.
     * @param secretHex
     *            The secret of the PSK in hexadecimal. It is not case sensitive; 4a is same as 4A, and it is allowed
     *            with or without 0x in the beginning. The minimum length of the secret is 128 bits and maximum 256
     *            bits.
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    public void create(PreSharedKey modelToCreate, @NonNull String secretHex) throws MbedCloudException {
        ((Security) getModuleOrThrow()).createPreSharedKey(secretHex, modelToCreate);
    }

    /**
     * Executes delete.
     * 
     * @param modelToDelete
     *            an sdk model.
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    @Override
    @NotImplemented
    public void delete(PreSharedKey modelToDelete) throws MbedCloudException {
        ApiUtils.checkNotNull(getModuleOrThrow().getLogger(), modelToDelete, "modelToDelete");
        delete(modelToDelete.getEndpointName());
    }
}
