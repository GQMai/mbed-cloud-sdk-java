// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated abstract class. Do not modify its contents.
// Code customisation should happen in the child class [PreSharedKeyDao]
package com.arm.mbed.cloud.sdk.security.model;

import com.arm.mbed.cloud.sdk.Security;
import com.arm.mbed.cloud.sdk.annotations.Internal;
import com.arm.mbed.cloud.sdk.annotations.NonNull;
import com.arm.mbed.cloud.sdk.annotations.Nullable;
import com.arm.mbed.cloud.sdk.annotations.Preamble;
import com.arm.mbed.cloud.sdk.common.ApiClientWrapper;
import com.arm.mbed.cloud.sdk.common.ConnectionOptions;
import com.arm.mbed.cloud.sdk.common.MbedCloudException;
import com.arm.mbed.cloud.sdk.common.SdkContext;
import com.arm.mbed.cloud.sdk.common.dao.AbstractModelDao;
import com.arm.mbed.cloud.sdk.common.dao.CreateDao;
import com.arm.mbed.cloud.sdk.common.dao.DeleteDao;
import com.arm.mbed.cloud.sdk.common.dao.ReadDao;

/**
 * Data Access Object (DAO) for pre shared keys.
 * <p>
 * 
 * @see <a href="http://www.corej2eepatterns.com/Patterns/DataAccessObject.htm">Core J2EE Patterns - Data Access
 *      Object</a>
 */
@Preamble(description = "Data Access Object (DAO) for pre shared keys.")
public abstract class AbstractPreSharedKeyDao extends AbstractModelDao<PreSharedKey> implements CreateDao<PreSharedKey>,
                                              DeleteDao<PreSharedKey>, ReadDao<PreSharedKey> {
    /**
     * Constructor.
     * 
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    public AbstractPreSharedKeyDao() throws MbedCloudException {
        super();
    }

    /**
     * Constructor.
     * 
     * @param client
     *            an api client wrapper.
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    public AbstractPreSharedKeyDao(ApiClientWrapper client) throws MbedCloudException {
        super(client);
    }

    /**
     * Constructor.
     * 
     * @param options
     *            a connection options.
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    public AbstractPreSharedKeyDao(ConnectionOptions options) throws MbedCloudException {
        super(options);
    }

    /**
     * Constructor.
     * 
     * @param sdkContext
     *            an sdk context.
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    public AbstractPreSharedKeyDao(SdkContext sdkContext) throws MbedCloudException {
        super(sdkContext);
    }

    /**
     * Adds a pre shared key.
     *
     * <p>
     * Note: uses internal data model
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.security.model.PreSharedKeyDao#create(String, com.arm.mbed.cloud.sdk.security.model.PreSharedKey)}
     * 
     * @param secretHex
     *            The secret of the PSK in hexadecimal. It is not case sensitive; 4a is same as 4A, and it is allowed
     *            with or without 0x in the beginning. The minimum length of the secret is 128 bits and maximum 256
     *            bits.
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    public void create(@NonNull String secretHex) throws MbedCloudException {
        create(secretHex, getModel());
    }

    /**
     * Adds a pre shared key.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.Security#createPreSharedKey(String, com.arm.mbed.cloud.sdk.security.model.PreSharedKey)}
     * 
     * @param secretHex
     *            The secret of the PSK in hexadecimal. It is not case sensitive; 4a is same as 4A, and it is allowed
     *            with or without 0x in the beginning. The minimum length of the secret is 128 bits and maximum 256
     *            bits.
     * @param preSharedKey
     *            a pre shared key.
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    public void create(@NonNull String secretHex, @NonNull PreSharedKey preSharedKey) throws MbedCloudException {
        ((Security) getModuleOrThrow()).createPreSharedKey(secretHex, preSharedKey);
    }

    /**
     * Deletes a pre shared key.
     *
     * <p>
     * Note: uses internal data model
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.security.model.PreSharedKeyDao#delete(com.arm.mbed.cloud.sdk.security.model.PreSharedKey)}
     * 
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    @Override
    public void delete() throws MbedCloudException {
        delete(getModel());
    }

    /**
     * Deletes a pre shared key.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.Security#deletePreSharedKey(com.arm.mbed.cloud.sdk.security.model.PreSharedKey)}
     * 
     * @param preSharedKey
     *            a pre shared key.
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    @Override
    public void delete(@NonNull PreSharedKey preSharedKey) throws MbedCloudException {
        ((Security) getModuleOrThrow()).deletePreSharedKey(preSharedKey);
    }

    /**
     * Deletes a pre shared key.
     *
     * <p>
     * Similar to {@link com.arm.mbed.cloud.sdk.Security#deletePreSharedKey(String)}
     * 
     * @param endpointName
     *            a string
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    @Override
    public void delete(@Nullable String endpointName) throws MbedCloudException {
        ((Security) getModuleOrThrow()).deletePreSharedKey(endpointName);
    }

    /**
     * Instantiates model.
     * 
     * @return instantiated model
     */
    @Override
    @Internal
    protected PreSharedKey instantiateModel() {
        return new PreSharedKey();
    }

    /**
     * Instantiates modules.
     * 
     * @param client
     *            an api client wrapper.
     * @return instantiated module
     */
    @Override
    @Internal
    protected SdkContext instantiateModule(ApiClientWrapper client) {
        return new Security(client);
    }

    /**
     * Instantiates modules.
     * 
     * @param options
     *            a connection options.
     * @return instantiated module
     */
    @Override
    @Internal
    protected SdkContext instantiateModule(ConnectionOptions options) {
        return new Security(options);
    }

    /**
     * Instantiates modules.
     * 
     * @param context
     *            an sdk context.
     * @return instantiated module
     */
    @Override
    @Internal
    protected SdkContext instantiateModule(SdkContext context) {
        return new Security(context);
    }

    /**
     * Gets a pre shared key.
     *
     * <p>
     * Note: uses internal data model
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.security.model.PreSharedKeyDao#read(com.arm.mbed.cloud.sdk.security.model.PreSharedKey)}
     * 
     * @return something
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    @Override
    public PreSharedKey read() throws MbedCloudException {
        return read(getModel());
    }

    /**
     * Gets a pre shared key.
     *
     * <p>
     * Similar to
     * {@link com.arm.mbed.cloud.sdk.Security#readPreSharedKey(com.arm.mbed.cloud.sdk.security.model.PreSharedKey)}
     * 
     * @param preSharedKey
     *            a pre shared key.
     * @return something
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    public PreSharedKey read(@NonNull PreSharedKey preSharedKey) throws MbedCloudException {
        return setAndGetModel(((Security) getModuleOrThrow()).readPreSharedKey(preSharedKey));
    }

    /**
     * Gets a pre shared key.
     *
     * <p>
     * Similar to {@link com.arm.mbed.cloud.sdk.Security#readPreSharedKey(String)}
     * 
     * @param endpointName
     *            The unique endpoint identifier that this PSK applies to. 16-64
     *            [printable](https://en.wikipedia.org/wiki/ASCII#Printable_characters) (non-control) ASCII characters.
     * @return something
     * @throws MbedCloudException
     *             if an error occurs during the process.
     */
    @Override
    public PreSharedKey read(@Nullable String endpointName) throws MbedCloudException {
        return setAndGetModel(((Security) getModuleOrThrow()).readPreSharedKey(endpointName));
    }
}
