// LWM2M Utils version
version = Lwm2mVersion
group = Lwm2mGroup

buildscript {
  repositories {
   jcenter()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.smokejumperit.gradle.license:Gradle-License-Report:0.0.2"
    classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:latest.release"
    classpath 'ru.vyarus:gradle-animalsniffer-plugin:1.4.0'
  }
}

apply plugin: 'java-library'
apply plugin: 'java-library-distribution'
apply plugin: 'license-report'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'jacoco' //Code coverage
apply plugin: 'signing'
apply plugin: 'build-dashboard'
apply plugin: 'project-report'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: "com.jfrog.bintray" //Upload to bintray
apply plugin: "ru.vyarus.animalsniffer" //Checks that SDK will work on Java 1.7 onwards


repositories {
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.slf4j:slf4j-api:1.7.7'
    api 'commons-codec:commons-codec:1.9'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

compileJava {
    // Library compatibility
    sourceCompatibility  JavaVersion.VERSION_1_7.toString()
    targetCompatibility  JavaVersion.VERSION_1_7.toString()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}


jar {
    manifest {
        attributes('Implementation-Title': 'Arm Pelion LWM2M library',
                    'Implementation-Version': project.version,
                    'Implementation-Vendor': 'Arm Limited',
                    'Implementation-URL': 'https://github.com/ARMmbed/mbed-cloud-sdk-java',
                    'Bundle-License': 'http://www.apache.org/licenses/LICENSE-2.0.txt')
    }
}

jacoco {
    toolVersion = "0.7.6.201602180812"
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom.withXml {
                    asNode().appendNode('name','Arm Pelion LWM2M library')
                    asNode().appendNode('url', 'https://github.com/ARMmbed/mbed-cloud-sdk-java')
                    asNode().appendNode('description', 'Library for serialisation/deserialisation of LWM2M objects: https://en.wikipedia.org/wiki/OMA_LWM2M')
                    asNode().appendNode('packaging', 'jar')
                    asNode().appendNode('licenses').appendNode('license').appendNode('url','http://www.apache.org/licenses/LICENSE-2.0.txt').parent().appendNode('name','The Apache License, Version 2.0')
                    asNode().appendNode('developers').appendNode('developer').appendNode('name','Adrien CABARBAYE').parent().appendNode('email','adrien.cabarbaye@arm.com').parent().appendNode('organization','Arm Mbed').parent().appendNode('organizationUrl','https://www.mbed.com/')
                    asNode().appendNode('scm').appendNode('connection','scm:git:git://github.com/ARMmbed/mbed-cloud-sdk-java.git').parent().appendNode('developerConnection','scm:git:ssh://github.com:ARMmbed/mbed-cloud-sdk-java.git').parent().appendNode('url','https://github.com/ARMmbed/mbed-cloud-sdk-java/tree/master')
               }
        }
    }
}

bintray {
    if (project.hasProperty('bintray_user')){
        user = "${bintray_user}"
    }
    if (project.hasProperty('bintray_password')){
        key = "${bintray_password}"
    }
    configurations = ['archives']
    publications = ['mavenJava']
    override = true
    publish = true
    //dryRun = true
    pkg {
        repo = 'mbed-cloud-sdk'
        name = 'mbed-lwm2m'
        labels = ["Mbed","LWM2M","TLV","Java","IoT"]
        desc = 'Utilities for serialisation/deserialisation of LWM2M objects: https://en.wikipedia.org/wiki/OMA_LWM2M.'
        userOrg = 'armmbed'
        licenses = ['Apache-2.0']
        websiteUrl = 'https://github.com/ARMmbed/mbed-cloud-sdk-java'
        issueTrackerUrl = 'https://github.com/ARMmbed/mbed-cloud-sdk-java/issues'
        vcsUrl = 'https://github.com/ARMmbed/mbed-cloud-sdk-java.git'
        githubRepo = 'ARMmbed/mbed-cloud-sdk-java'
        githubReleaseNotesFile = 'README.md'
        publicDownloadNumbers = true
        publish = true
        if (project.hasProperty('Lwm2mVersion')){
            version {
                name = Lwm2mVersion
                //gpg {
                //    sign = true //Determines whether to GPG sign the files. The default is false
                //}
                if (project.hasProperty('maven_central_user') && project.hasProperty('maven_central_password')){
                    mavenCentralSync {
                        sync = true
                        user = "${maven_central_user}" //OSS user token
                        password = "${maven_central_password}" //OSS user password
                        close = '1' // By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
                    }
                }
            }
        }
    }
}
