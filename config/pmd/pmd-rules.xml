<?xml version="1.0"?>
<!-- Copyright (C) 2011-2017 Arm Limited. All rights reserved. SPDX-License-Identifier: 
	Apache-2.0 Licensed under the Apache License, Version 2.0 (the "License"); 
	you may not use this file except in compliance with the License. You may 
	obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->
<ruleset name="mbed ruleset"
	xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">

	<description>pmd-rules</description>

	<rule ref="rulesets/java/basic.xml" />
	<rule ref="rulesets/java/braces.xml" />
	<!-- <rule ref="rulesets/java/clone.xml" /> -->
	<rule ref="rulesets/java/unusedcode.xml">
		<exclude name="UnusedLocalVariable" />
	</rule>
	<rule ref="rulesets/java/finalizers.xml" />
	<rule ref="rulesets/java/imports.xml">
		<exclude name="UnnecessaryFullyQualifiedName" />
	</rule>
	<rule ref="rulesets/java/logging-java.xml" />

	<rule ref="rulesets/java/codesize.xml">
		<exclude name="TooManyFields" />
		<exclude name="TooManyMethods" />
		<exclude name="ExcessivePublicCount" />
		<exclude name="ExcessiveClassLength" />
		<exclude name="ExcessiveParameterList" />
	</rule>
	<rule ref="rulesets/java/codesize.xml/CyclomaticComplexity">
		<properties>
			<property name="reportLevel" value="30" />
		</properties>
		<properties>
			<!-- ignore this run on methods: equals and hashCode -->
			<property name="violationSuppressXPath"
				value="./MethodDeclarator[@Image='hashCode' or @Image='equals']" />
		</properties>
	</rule>

	<rule ref="rulesets/java/codesize.xml/NPathComplexity">
		<properties>
			<property name="minimum" value="200" />
		</properties>
		<properties>
			<!-- ignore this run on methods: equals and hashCode and mapList -->
			<property name="violationSuppressXPath"
				value="./MethodDeclarator[@Image='hashCode' or @Image='equals' or @Image='mapList' or @Image='isVerified']" />
		</properties>
	</rule>



	<rule ref="rulesets/java/design.xml">
		<exclude name="AvoidSynchronizedAtMethodLevel" />
		<exclude name="GodClass" />
		<exclude name="ReturnEmptyArrayRatherThanNull" />
		<exclude name="UnnecessaryLocalBeforeReturn" />
		<exclude name="ConstructorCallsOverridableMethod" />
		<exclude name="EmptyMethodInAbstractClassShouldBeAbstract" />
	</rule>
	<rule ref="rulesets/java/migrating.xml">
		<exclude name="JUnit4TestShouldUseTestAnnotation" />
	</rule>
	<rule ref="rulesets/java/naming.xml">
		<exclude name="AvoidFieldNameMatchingMethodName" />
		<exclude name="LongVariable" />
		<exclude name="ShortVariable" />
		<exclude name="ShortClassName" />
	</rule>
	<rule ref="rulesets/java/optimizations.xml">
		<exclude name="AvoidInstantiatingObjectsInLoops" />
		<exclude name="MethodArgumentCouldBeFinal" />
		<exclude name="PrematureDeclaration" />
	</rule>
	<rule ref="rulesets/java/strictexception.xml">
		<exclude name="SignatureDeclareThrowsException" />
		<exclude name="AvoidCatchingGenericException" />
		<exclude name="AvoidThrowingRawExceptionTypes" />
	</rule>
	<rule ref="rulesets/java/strings.xml">
	</rule>
	<rule ref="rulesets/java/strings.xml/AvoidDuplicateLiterals">
		<properties>
			<property name="maxDuplicateLiterals" value="8" />
		</properties>
	</rule>
	<rule ref="rulesets/java/unnecessary.xml">
		<!-- <exclude name="UselessParentheses" /> -->
	</rule>
</ruleset>
